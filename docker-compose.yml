services:
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: chetapp-auth
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      auth-db:
        condition: service_healthy
    networks:
      - chetapp-network
    environment:
      - DB_HOST=auth-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=chetapp-auth-db

  fleet-management:
    build:
      context: ./fleet-management
      dockerfile: Dockerfile
    container_name: chetapp-fleet-management
    ports:
      - "8001:8001"
    restart: unless-stopped
    depends_on:
      chetapp-fleet-management-db:
        condition: service_healthy
    networks:
      - chetapp-network
    environment:
      - DB_HOST=chetapp-fleet-management-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=chetapp-fleet-management-db

  routes:
    build:
      context: ./routes
      dockerfile: Dockerfile
    container_name: chetapp-routes
    ports:
      - "8082:8082"
    restart: unless-stopped
    depends_on:
      routes-db:
        condition: service_healthy
    networks:
      - chetapp-network
    environment:
      - DB_HOST=chetapp-routes-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=chetapp-routes-db

  krakend:
    build:
      context: ./krakend
      dockerfile: Dockerfile
    container_name: chetapp-gateway
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - chetapp-network
    depends_on:
      - auth
      - fleet-management
      - routes

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: chetapp-nginx
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - chetapp-network
    depends_on:
      - krakend

  auth-db:
    image: postgres:17-bullseye
    container_name: chetapp-auth-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chetapp-auth-db
    ports:
      - "5433:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - chetapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  chetapp-fleet-management-db:
    image: postgres:17-bullseye
    container_name: chetapp-fleet-management-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chetapp-fleet-management-db
    ports:
      - "5434:5432"
    volumes:
      - fleet-management-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - chetapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  routes-db:
    image: postgres:17-bullseye
    container_name: chetapp-routes-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chetapp-routes-db
    ports:
      - "5435:5432"
    volumes:
      - routes-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - chetapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  dbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: chetapp-dbeaver
    ports:
      - "8978:8978"
    volumes:
      - dbeaver-data:/opt/cloudbeaver/workspace
    restart: unless-stopped
    networks:
      - chetapp-network
    depends_on:
      - auth-db
      - chetapp-fleet-management-db

  prometheus:
    image: prom/prometheus:latest
    container_name: chetapp-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - chetapp-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - auth
      - fleet-management
      - routes

  grafana:
    image: grafana/grafana:latest
    container_name: chetapp-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - chetapp-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=chetapp
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes:
  dbeaver-data:
    driver: local
  auth-db-data:
    driver: local
  fleet-management-db-data:
    driver: local
  routes-db-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  chetapp-network:
    driver: bridge
